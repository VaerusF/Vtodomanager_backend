// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VtodoManager.NewsService.DataAccess.Postgres;

#nullable disable

namespace VtodoManager.NewsService.DataAccess.Postgres.Migrations.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240927100500_Add Index News")]
    partial class AddIndexNews
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VtodoManager.NewsService.Entities.Models.News", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Title", "Content");

                    b.ToTable("News");
                });

            modelBuilder.Entity("VtodoManager.NewsService.Entities.Models.NewsFile", b =>
                {
                    b.Property<long>("NewsId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.HasKey("NewsId", "FileName");

                    b.ToTable("NewsFiles");
                });

            modelBuilder.Entity("VtodoManager.NewsService.Entities.Models.NewsFile", b =>
                {
                    b.HasOne("VtodoManager.NewsService.Entities.Models.News", null)
                        .WithMany("Files")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VtodoManager.NewsService.Entities.Models.News", b =>
                {
                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
